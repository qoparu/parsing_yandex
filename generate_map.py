import os
import csv
import folium
from folium.plugins import MarkerCluster
import argparse

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ ---
parser = argparse.ArgumentParser(description="–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫–∞—Ä—Ç—ã –ø–æ –ª–æ–≥–∞–º.")
parser.add_argument("year", type=int, nargs='?', default=None, help="–ì–æ–¥ –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 2023). –ï—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω, –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—à–µ–Ω.")
args = parser.parse_args()

if args.year:
    YEAR = str(args.year)
else:
    YEAR = input("‚û°Ô∏è –í–≤–µ–¥–∏—Ç–µ –≥–æ–¥ –¥–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 2023): ")
    
if not YEAR.isdigit() or not (2010 < int(YEAR) < 2030):
    print(f"‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≥–æ–¥: {YEAR}. –í—ã—Ö–æ–¥.")
    exit()

print(f"üó∫Ô∏è –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–∞—Ä—Ç—É –¥–ª—è {YEAR} –≥–æ–¥–∞...")

output_dir = f"output/{YEAR}"
input_csv = "almaty_roads.csv" # –ü—É—Ç—å –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É CSV —Å –¥–æ—Ä–æ–≥–∞–º–∏
log_file = os.path.join(output_dir, f"metadata_{YEAR}.csv")
bad_addresses_file = os.path.join(output_dir, f"no_panorama_addresses_{YEAR}.csv")
map_output = os.path.join(output_dir, f"map_{YEAR}.html")

# --- –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã ---
# –ü—Ä–∏–º–µ—Ä–Ω—ã–π —Ü–µ–Ω—Ç—Ä –¥–ª—è –ê–ª–º–∞—Ç—ã
map_center = [43.2389, 76.8512] 
road_map = folium.Map(location=map_center, zoom_start=12, tiles='OpenStreetMap')

# --- –ù–∞–Ω–µ—Å–µ–Ω–∏–µ —Å–ª–æ–µ–≤ ---
# 1. –ë–∞–∑–æ–≤—ã–π —Å–ª–æ–π –≤—Å–µ—Ö –¥–æ—Ä–æ–≥
try:
    with open(input_csv, mode="r", encoding="utf-8") as f:
        reader = csv.DictReader(f)
        base_roads_layer = folium.FeatureGroup(name="–í—Å–µ –¥–æ—Ä–æ–≥–∏ (–∏–∑ —Ñ–∞–π–ª–∞)", show=True).add_to(road_map)
        for row in reader:
            geom = (row.get("geometry_wkt") or "").strip()
            # –ü—Ä–æ—Å—Ç–∞—è —Ä–µ–≥—É–ª—è—Ä–∫–∞ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ WKT
            import re
            coords_pairs = re.findall(r"([-\d\.]+)\s+([-\d\.]+)", geom)
            if coords_pairs:
                path = [(float(lat), float(lon)) for lon, lat in coords_pairs]
                folium.PolyLine(path, color="gray", weight=2, opacity=0.7).add_to(base_roads_layer)
    print("‚úÖ –ë–∞–∑–æ–≤—ã–π —Å–ª–æ–π –¥–æ—Ä–æ–≥ –Ω–∞–Ω–µ—Å–µ–Ω.")
except FileNotFoundError:
    print(f"‚ö†Ô∏è –ò—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª {input_csv} –Ω–µ –Ω–∞–π–¥–µ–Ω. –ë–∞–∑–æ–≤—ã–π —Å–ª–æ–π –Ω–µ –±—É–¥–µ—Ç –ø–æ—Å—Ç—Ä–æ–µ–Ω.")

# 2. –ú–∞—Ä–∫–µ—Ä—ã
marker_cluster = MarkerCluster(name=f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã {YEAR}").add_to(road_map)
# –£—Å–ø–µ—à–Ω—ã–µ —Ç–æ—á–∫–∏
try:
    with open(log_file, 'r', newline='', encoding='utf-8') as f:
        reader = csv.DictReader(f)
        success_count = 0
        for row in reader:
            try:
                lat, lon = float(row['Latitude']), float(row['Longitude'])
                popup_text = f"{row.get('RoadName', '')}<br>ObjectID: {row.get('ObjectID', 'N/A')}<br>–°—Ç–∞—Ç—É—Å: –£—Å–ø–µ—Ö"
                folium.Marker(
                    location=[lat, lon], 
                    popup=popup_text, 
                    icon=folium.Icon(color="green", icon="check", prefix='fa')
                ).add_to(marker_cluster)
                success_count += 1
            except (ValueError, KeyError):
                continue
    print(f"‚úÖ –ù–∞–Ω–µ—Å–µ–Ω–æ {success_count} —É—Å–ø–µ—à–Ω—ã—Ö –º–∞—Ä–∫–µ—Ä–æ–≤.")
except FileNotFoundError:
    print(f"‚ÑπÔ∏è –§–∞–π–ª –ª–æ–≥–∞ {os.path.basename(log_file)} –Ω–µ –Ω–∞–π–¥–µ–Ω.")

# –ù–µ—É–¥–∞—á–Ω—ã–µ —Ç–æ—á–∫–∏
try:
    with open(bad_addresses_file, 'r', newline='', encoding='utf-8') as f:
        reader = csv.reader(f)
        fail_count = 0
        for row in reader:
            try:
                road_name, lat, lon = row[0], float(row[1]), float(row[2])
                popup_text = f"{road_name}<br>–°—Ç–∞—Ç—É—Å: –ù–µ –Ω–∞–π–¥–µ–Ω–æ"
                folium.Marker(
                    location=[lat, lon], 
                    popup=popup_text, 
                    icon=folium.Icon(color="red", icon="times", prefix='fa')
                ).add_to(marker_cluster)
                fail_count += 1
            except (ValueError, IndexError):
                continue
    print(f"‚úÖ –ù–∞–Ω–µ—Å–µ–Ω–æ {fail_count} –º–∞—Ä–∫–µ—Ä–æ–≤ –±–µ–∑ –ø–∞–Ω–æ—Ä–∞–º.")
except FileNotFoundError:
    print(f"‚ÑπÔ∏è –§–∞–π–ª –ª–æ–≥–∞ {os.path.basename(bad_addresses_file)} –Ω–µ –Ω–∞–π–¥–µ–Ω.")

# --- –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ ---
folium.LayerControl().add_to(road_map)
road_map.save(map_output)

print("-" * 50)
print(f"‚úÖ –ö–∞—Ä—Ç–∞ —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: {os.path.abspath(map_output)}")